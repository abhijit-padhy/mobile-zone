{"version":3,"sources":["logo.svg","components/carousal/Carousal.jsx","components/product/Product.jsx","components/products/Products.jsx","components/blackjack/Blackjack.helper.js","components/blackjack/Blackjack.jsx","components/listMaking/ListMaking.jsx","components/billDesk/NewBillForm.jsx","components/billDesk/BillDeskTimeSeriesChart.jsx","components/billDesk/BillDesk.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Carousal","props","useState","imageIndex","setImageIndex","timer","setInterval","length","images","clearInterval","className","data-testid","src","alt","style","product","border","padding","textAlign","borderRadius","boxShadow","margin","Product","name","price","Products","products","setProducts","useEffect","fetch","then","res","json","response","console","log","map","index","key","Deck","1","value","2","3","4","5","6","7","8","9","10","11","12","13","CardTypes","getCard","type","playerPoints","setPlayerPoints","dealerPoints","setDealerPoints","player","dealer","playerCards","setPlayerCards","show","text","message","setMessage","calculatePoints","currentPoint","_random","random1to13","totalPoints","currentIndex","onHit","pointsResponse","cardPath","_cardList","JSON","parse","stringify","Math","floor","random","push","maxWidth","title","onClick","forEach","document","getElementsByTagName","setAttribute","point","isPlayerValid","isDealerValid","_msg","getWinner","marginLeft","window","location","reload","card","id","split","pop","zIndex","left","jsx","ceil","width","height","allow","data","onSubmit","resetForm","ev","preventDefault","formData","FormData","target","get","date","Date","category","getMonth","getDate","getFullYear","autoComplete","htmlFor","defaultValue","description","amount","bills","xAxis","labels","rotation","series","responsive","rules","condition","chartOptions","legend","align","verticalAlign","layout","yAxis","x","y","subtitle","credits","enabled","options","setOptions","bill","Number","tmpOptions","highcharts","Highcharts","initialFormState","undefined","displayBills","setDisplayBills","setBills","formState","setFormState","selectedCategory","categories","billCategories","setBillCategories","budget","useRef","minBillsToPay","setMinBillsToPay","enableNewBillForm","_showForm","current","prevProps","_categories","list","dataSet","item","Object","keys","error","getUniqueDataSet","_selectedCategory","findIndex","c","_filterText","_list","__filterText","toLowerCase","_item","filterList","onChange","e","selected","_category","_bills","bIndex","splice","deleteItem","_budget","_reduced","sort","a","b","tmp","NewBillForm","updatedBill","BillDeskTimeSeriesChart","App","path","el","to","exact","Blackjack","ListMaking","BillDesk","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","headers","contentType","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.708e2d85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {useState} from 'react'\nimport './carousal.css';\n\nfunction Carousal(props) {\n  const [imageIndex, setImageIndex] = useState(0);\n\n  const timer = setInterval(() => {\n    let length = props.images.length;\n    if (imageIndex >= length-1) {\n      setImageIndex(0);\n    } else {\n      setImageIndex(imageIndex+1);\n    }\n    clearInterval(timer);\n  }, 2000);\n\n  return (\n    <div className=\"carousal\">\n      <div className=\"container\">\n        <img data-testid=\"carousalImg\" src={props.images[imageIndex]} alt=\"loading...\" />\n      </div>\n    </div>\n  )\n}\n\nexport default Carousal\n","import React from 'react'\nimport './product.css';\nimport Carousal from '../carousal/Carousal';\n\nconst style = {\n  product: {\n    border: \"1px solid #ccc\",\n    padding: \"1rem\",\n    textAlign: \"left\",\n    borderRadius: \".25rem\",\n    boxShadow: \"2px 2px 5px #ccc\",\n    margin: \"0 4px\"\n  }\n}\n\nfunction Product({product}) {\n  const {name, price, images} = product;\n\n  return (\n    <div className=\"product\" style={style.product}>\n      <div className=\"name\"><b>{name}</b></div>\n      <div className=\"price\">INR {price}</div>\n      <Carousal images={images} />\n    </div>\n  )\n}\n\nexport default Product\n","import React, {useState, useEffect} from 'react'\nimport Product from '../product/Product';\nimport './products.css';\n\nfunction Products() {\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    fetchProducts();\n    return () => {\n      console.log('Unmounting.')\n    }\n  }, []);\n\n  function fetchProducts() {\n    let url = \"/mobile-zone/data/products.json\";\n    fetch(url, {})\n    .then(res => res.json())\n    .then(response => {\n      console.log(response);\n      if (response) {\n        setProducts(response);\n      }\n    });\n  }\n  return (\n    <div className=\"products\">\n      <h2>Products</h2>\n      <div className=\"products-container\">\n        {\n          products.length ?\n          products.map((product, index) => (\n            <Product key={index} product={product} />\n          )) : <></>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Products\n","let _deck = {\n  1: {\n    name: \"ace\",\n    value: 1\n  },\n  2: {\n    name: \"2\",\n    value: 2\n  },\n  3: {\n    name: \"3\",\n    value: 3\n  },\n  4: {\n    name: \"4\",\n    value: 4\n  },\n  5: {\n    name: \"5\",\n    value: 5\n  },\n  6: {\n    name: \"6\",\n    value: 6\n  },\n  7: {\n    name: \"7\",\n    value: 7\n  },\n  8: {\n    name: \"8\",\n    value: 8\n  },\n  9: {\n    name: \"9\",\n    value: 9\n  },\n  10: {\n    name: \"10\",\n    value: 10\n  },\n  11: {\n    name: \"jack\",\n    value: 10\n  },\n  12: {\n    name: \"queen\",\n    value: 10\n  },\n  13: {\n    name: \"king\",\n    value: 10\n  },\n}\n\nexport const Deck = _deck; //JSON.parse(JSON.stringify(_deck));\n\nexport const CardTypes = [\"clubs\", \"spades\", \"hearts\", \"diamonds\"];\n\nexport const getCard = (name, type) => \n  '/mobile-zone/assets/cards-png/'+name+'_of_'+type+'.png';","import React, {useState, useEffect} from 'react';\nimport { Deck, CardTypes, getCard } from \"./Blackjack.helper\";\n\n/**\n * Problem : Create a react-app blackjack game, ensuring the following \nfunctionalities.\n-  1. shuffle the deck\n-  2. hand out 2 cards each to dealer and player\n-  2. prompt player for actions (hit, stand)\n-  3. dealer(computer) decides to draw until at least 17 points\n-  4. determine who wins the round\nAssumptions :\n* Poker Cards only\n* Rank: (A, 2-10, J,Q, K),\n* Suit : (Spade, Heart, Club, Diamond)\n* A Deck of poker cards: 52(13 rank * 4 suit) possible unique card combination, \nit's a game trying to make your hand closest to 21 points but exceeding 21 means\ngame over, whoever is highest below 22 points wins\n* assume that there's only 1 dealer and 1 player\n* 2-10: 2-10 points\n* J,Q,K: 10 points\n* A : 11/1 point (can be 11 or 1 points)\n */\nexport default () => {\n  const [playerPoints, setPlayerPoints] = useState(0);\n  const [dealerPoints, setDealerPoints] = useState(0);\n  const [playerCards, setPlayerCards] = useState({\n    player: [],\n    dealer: []\n  });\n  const [message, setMessage] = useState({\n    show: false,\n    text: \"\",\n  })\n\n  useEffect(() => {\n    // player must get a card\n    onHit();\n  }, [])\n\n  /**\n   * Used to generate and calculate total points based on given current points\n   * & business logic.\n   * @param {*} currentPoint \n   */\n  function calculatePoints(currentPoint=0) {\n    let _random = random1to13();\n    let value = Deck[_random].value;\n    if (_random === 1) {\n      return {\n        totalPoints: currentPoint + 11 > 21 ? currentPoint + 1 : currentPoint + 11,\n        currentIndex: _random\n      };\n    }\n    return {\n      totalPoints: currentPoint + value,\n      currentIndex: _random\n    };\n  }\n\n  // Used to draw card for player\n  function onHit() {\n    if (playerPoints<=17) {\n      let pointsResponse = calculatePoints(playerPoints)\n      setPlayerPoints(pointsResponse[\"totalPoints\"]);\n      let _cardList = JSON.parse(JSON.stringify(playerCards[\"player\"]));\n      let cardPath = \"\";\n      cardPath = getCard(Deck[pointsResponse.currentIndex].name, CardTypes[Math.floor(Math.random()*4)]);\n      _cardList.push(cardPath);\n      setPlayerCards({...playerCards, \"player\": [..._cardList]});\n    }    \n  }\n\n  // Used to draw card card for dealer\n  // and calls getWinner method \n  function onStand() {\n    let buttonIndexes = [0, 1]; // 0 for hit, 1 for stand\n    buttonIndexes.forEach(key => {\n      document.getElementsByTagName('button')[key].setAttribute('disabled',true)\n    });\n    let point = 0;\n    let _cardList = [];\n    while (point<=17) {\n      let pointsResponse = calculatePoints(point);\n      point = pointsResponse[\"totalPoints\"];\n      let cardPath = \"\";\n      cardPath = getCard(Deck[pointsResponse.currentIndex].name, CardTypes[Math.floor(Math.random()*4)]);\n      _cardList.push(cardPath);\n    }\n    setDealerPoints(point);\n    setPlayerCards({...playerCards, \"dealer\": [..._cardList]});\n    getWinner(playerPoints, point);\n  }\n\n  /**\n   * Used to predict the winner of this game\n   * @param {*} playerPoints \n   * @param {*} dealerPoints \n   */\n  function getWinner(playerPoints=0, dealerPoints=0) {\n    let isPlayerValid = playerPoints<=21;\n    let isDealerValid = dealerPoints<=21;\n    let _msg = \"\";\n    if (isPlayerValid && isDealerValid) {\n      _msg = dealerPoints === playerPoints ? \"It's a tie\"\n        : (dealerPoints > playerPoints ? \"Winner is DEALER\"\n          : \"Winner is PLAYER\")\n    } else if (isPlayerValid) {\n      _msg = \"Winner is PLAYER\";\n    } else if (isDealerValid) {\n      _msg = \"Winner is DEALER\";\n    } else {\n      _msg = \"It's a tie\";\n    }\n    setMessage({\n      show: true,\n      text: _msg + \" !!\",\n    })\n  }\n\n  return (\n    <div className=\"blackjack\" style={{maxWidth: \"400px\", margin: \"0 auto\"}}>\n      <h1>Blackjack</h1>\n      {\n        message.show ?\n        <div className=\"message-container\">\n          <div className=\"message\">\n          <h2>{message.text}</h2>\n          </div>\n        </div> : <></>\n      }\n      <div className=\"players\">\n        <div className=\"player\">\n          <div className=\"title\">Player: {playerPoints}</div>\n          <div className=\"btn-container\">\n            <button title=\"Click hit to draw card.\"\n              onClick={onHit}\n              style={{}}>Hit</button>\n            <button title=\"Click stand to stop drawing card.\"\n              onClick={onStand}\n              style={{marginLeft: \"1rem\"}}>Stand</button>\n            <button title=\"Click reload to reset data.\"\n              onClick={() => window.location.reload()}\n              style={{marginLeft: \"1rem\"}}>Reload</button>\n          </div>\n        </div>\n        {\n          playerCards.player.length ?\n          <div className=\"cards\">\n            {\n              playerCards.player.map((card, id) => \n                <img key={id} src={card}\n                  alt={card.split(\"/\").pop()}\n                  style={{zIndex: (id), left: 10+(id*30)+'px'}} />\n              )\n            }\n          </div> : <></>\n        }\n        <div className=\"title\">Dealer: {dealerPoints}</div>\n        {\n          playerCards.dealer.length ?\n          <div className=\"cards\">\n            {\n              playerCards.dealer.map((card, id) => \n                <img key={id} src={card}\n                  alt={card.split(\"/\").pop()}\n                  style={{zIndex: (id), left: 10+(id*30)+'px'}} />\n              )\n            }\n          </div> : <></>\n        }\n      </div>\n      <p> \n      Rules: <br />\n      -  1. shuffle the deck <br />\n      -  2. hand out 2 cards each to dealer and player <br />\n      -  2. prompt player for actions (hit, stand) <br />\n      -  3. dealer(computer) decides to draw until at least 17 points <br />\n      -  4. determine who wins the round <br />\n      <br />\n      Assumptions : <br />\n      * Poker Cards only <br />\n      * Rank: (A, 2-10, J,Q, K), <br />\n      * Suit : (Spade, Heart, Club, Diamond) <br />\n      * A Deck of poker cards: 52(13 rank * 4 suit) possible unique card combination,  <br />\n      * It's a game trying to make your hand closest to 21 points but exceeding 21 means\n      game over, whoever is highest below 22 points wins\n      * assume that there's only 1 dealer and 1 player <br />\n      * 2-10: 2-10 points <br />\n      * J,Q,K: 10 points <br />\n      * A : 11/1 point (can be 11 or 1 points) <br />\n      </p>\n      <style jsx=\"true\">{`\n        .blackjack {\n          border: 1px solid #ccc;\n          border-radius: 5px;\n          box-shadow: 2px 2px 6px 2px #eee;\n        }\n\n        .blackjack .title {\n          padding: 1rem;\n        }\n\n        .blackjack .btn-container {\n          padding-bottom: 1rem;\n        }\n\n        .blackjack button {\n          padding: .35rem 1.5rem;\n          border-radius: 5px;\n          font-weight: bold;\n        }\n\n        .blackjack button:focus {\n          outline: none;\n        }\n\n        .blackjack p {\n          text-align: left;\n          font-size: 14px;\n          color: #949494;\n          padding: 1rem;\n        }\n\n        .blackjack .cards {\n          position: relative;\n          height: 180px;\n        }\n\n        .blackjack .cards img {\n          height: 140px;\n          width: 100px;\n          border: 1px solid grey;\n          padding: .25rem;\n          border-radius: 5px;\n          position: absolute;\n          background: white;\n          word-break: break-all;\n        }\n\n        .blackjack .message-container {\n          padding: 0 1rem;\n        }\n\n        .blackjack .message-container .message {\n          background: linear-gradient(45deg, #67dcfa, transparent);\n          border-radius: 5px;\n        }\n      `}</style>\n    </div>\n  )\n}\n\nexport const random1to13 = () => {\n  let _random = Math.random();\n  if (_random === 0) {\n    random1to13();\n  }\n  // return max 13 because highest card index is 13 which represents king.\n  return Math.ceil(_random*13);\n}","import React from 'react';\n\n/**\n * This is list making component with given stages.\n * User can create, drag and drop tasks withing the stages.\n */\nexport default () => {\n  return (\n    <iframe id=\"listMaking\"\n      title=\"List Making\"\n      width=\"994px\"\n      height=\"550px\"\n      style={{border: \"none\"}}\n      src=\"https://abhijit-padhy.github.io/list-making/\" allow=\"fullscreen\">\n    </iframe>\n  )\n}","import React, { useState } from 'react'\n\nexport default ({data, onSubmit, resetForm}) => {\n  // const [state, setstate] = useState(initialState)\n  function submit(ev) {\n    ev.preventDefault();\n    let formData = new FormData(ev.target);\n    console.log(\"form data: \", formData.get(\"amount\"));\n    let date = new Date();\n    onSubmit({\n      \"id\": data.id,\n      \"description\": formData.get(\"description\"),\n      \"category\": data.category || formData.get(\"category\"),\n      \"amount\": formData.get(\"amount\"),\n      \"date\": (date.getMonth()+1) + \"-\" + date.getDate() + \"-\" + date.getFullYear()\n    });\n  }\n\n  return (\n    <div className=\"new-bill-form\">\n      <form onSubmit={submit} autoComplete=\"off\">\n        <div className=\"form-group\">\n          <label htmlFor=\"description\">Description:&nbsp;&nbsp;</label>\n          <input type=\"text\" name=\"description\" defaultValue={data.description} />\n        </div>\n        {\n          !data.category ?\n          <div className=\"form-group\">\n            <label htmlFor=\"category\">Category:&nbsp;&nbsp;</label>\n            <input type=\"text\" name=\"category\" defaultValue={data.category} />\n          </div> : <></>\n        }\n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">Amount:&nbsp;&nbsp;</label>\n          <input type=\"number\" name=\"amount\" defaultValue={data.amount} />\n        </div>\n        <div className=\"form-group\">\n          <button>Submit</button>\n          <button style={{marginLeft: \".5rem\"}}\n            onClick={resetForm}>Reset</button>\n        </div>\n      </form>\n      <style jsx>{`\n        form {\n          padding: 1rem;\n          text-align: left;\n        }\n\n        form .form-group {\n          padding-bottom: .5rem;\n        }\n\n        form .form-group input {\n          border-radius: 5px;\n          padding: .25rem\n          background: white;\n        }\n      `}</style>\n    </div>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\nexport default ({ bills }) => {\n  const [options, setOptions] = useState({\n    title: {\n      text: ''\n    },\n    xAxis: {\n      type: 'category',\n      labels: {\n        rotation: -45\n      }\n    },\n    series: [{\n      data: []\n    }],\n    responsive: {\n      rules: [{\n          condition: {\n              maxWidth: 500\n          },\n          chartOptions: {\n              legend: {\n                  align: 'center',\n                  verticalAlign: 'bottom',\n                  layout: 'horizontal'\n              },\n              yAxis: {\n                  labels: {\n                      align: 'left',\n                      x: 0,\n                      y: -5\n                  },\n                  title: {\n                      text: null\n                  }\n              },\n              subtitle: {\n                  text: null\n              },\n              credits: {\n                  enabled: false\n              }\n          }\n      }]\n  }\n  });\n\n  useEffect(() => {\n    let data = bills.map(bill => [bill.date, Number(bill.amount)]);\n    let tmpOptions = { ...options };\n    tmpOptions.series[0].data = [...data];\n    console.log(\"options: \", data, bills)\n    setOptions({ ...tmpOptions });\n  }, [bills]);\n\n  return (\n    <div className=\"tseries-chart\">\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={options}\n      />\n      <style jsx=\"true\">{`\n        .tseries-chart {\n          display: flex;\n          justify-content: center;\n          max-width: 100%;\n        }\n      `}</style>\n    </div>\n  )\n}","import React, { useState, useEffect, useRef } from 'react';\nimport NewBillForm from './NewBillForm';\nimport BillDeskTimeSeriesChart from './BillDeskTimeSeriesChart';\n\nconst initialFormState = {\n  show: false,\n  data: undefined\n}\n/**\n * Bill Desk\n * use case\n * Adithya owns a car wash business and needs help to manage various bills from his vendors.  Build an application to help Adithya manage his monthly bills.   The application must be written in React with Redux, using appropriate middleware. The bill manager shows a bill dashboard (list of bills) with the total monthly billed amount.   LEVEL-1: •  The user must be able to manually add, edit and remove bills. (update the state locally) •  The user must be able to filter bills by category. (category filter dropdown) •  Draw a time-series chart of the monthly billing cycle.  LEVEL-2:  Adithya wants to be able to see a minimum number of bills that should be paid (n),  such that their total value does not exceed the monthly budget value while meeting the condition that no more bills can be added from the remaining bills.. Highlight all the bills that should be paid. \n */\nexport default () => {\n  const [displayBills, setDisplayBills] = useState([])\n  const [bills, setBills] = useState([])\n  const [formState, setFormState] = useState(initialFormState);\n  const [billCategories, setBillCategories] = useState({\n    selectedCategory: \"All\",\n    categories: []\n  });\n  const budget = useRef(0);\n  const [minBillsToPay, setMinBillsToPay] = useState([])\n\n  useEffect(() => {\n    fetchProducts();\n    return () => {\n      console.log('Unmounting Bill desk.')\n    }\n  }, []);\n\n  useEffect((prevProps) => {\n    console.log(\"changed\");\n    let _categories = getUniqueDataSet(bills, \"category\");\n    let _selectedCategory = _categories.findIndex(c =>\n      c === billCategories.selectedCategory) > -1\n      ? billCategories.selectedCategory : \"All\"\n    setBillCategories({\n      ...billCategories,\n      categories: [..._categories],\n      selectedCategory: _selectedCategory\n    });\n    setDisplayBills(filterList(bills, _selectedCategory, \"category\"));\n  }, [bills, billCategories.selectedCategory]);\n\n  /**\n   * Used to filter out bills by category\n   * @param {*} list \n   * @param {*} key \n   */\n  function filterList(list = [], _filterText, key) {\n    let _list = [];\n    if (list.length && _filterText && key) {\n      let __filterText = _filterText.toLowerCase();\n      if (__filterText === \"all\") {\n        _list = list;\n      } else {\n        list.forEach(_item => {\n          if (_item[key].toLowerCase() === __filterText) _list.push(_item);\n        });\n      }\n    }\n    return [..._list];\n  }\n\n  /**\n   * Used to generate bill category list.\n   * returns Array of unique strings.\n   * @param {Array} list \n   * @param {String} key \n   */\n  function getUniqueDataSet(list = [], key) {\n    try {\n      if (key) {\n        let dataSet = {};\n        list.forEach(item => {\n          //without below if in wrong cases it assigns undefined=true\n          if (item[key]) dataSet[item[key]] = true;\n        });\n        console.log(dataSet);\n        return Object.keys(dataSet || {});\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    return [];\n  }\n\n  function fetchProducts() {\n    let url = \"/mobile-zone/data/bill-desk/bills.json\";\n    fetch(url, {})\n      .then(res => res.json())\n      .then(response => {\n        console.log(response);\n        if (response) {\n          setBills(response.bills || []);\n          budget.current = response.budget;\n        }\n      });\n  }\n\n  function enableNewBillForm(_showForm, data) {\n    if (_showForm) {\n      setFormState({\n        show: true,\n        data: JSON.parse(JSON.stringify(data ? data\n          : { id: bills[bills.length - 1][\"id\"] + 1 }))\n      })\n    } else {\n      setFormState({ ...initialFormState });\n    }\n  }\n\n  function onSubmit(updatedBill) {\n    let _bills = [...bills]\n    let bIndex = _bills.findIndex(bill => bill.id === updatedBill.id);\n    if (bIndex > -1) {\n      Object.keys(updatedBill).forEach(key => _bills[bIndex][key] = updatedBill[key]);\n    } else {\n      _bills.push(updatedBill);\n    }\n    setBills([..._bills]);\n    resetForm();\n  }\n\n  function resetForm() {\n    enableNewBillForm(false);\n  }\n\n  function deleteItem(id) {\n    let _bills = [...bills];\n    let bIndex = _bills.findIndex(bill => bill.id === id);\n    if (bIndex > -1) {\n      _bills.splice(bIndex, 1);\n    }\n    setBills([..._bills]);\n  }\n\n  function reduceBillsLessThanBuget() {\n    let _budget = 0;\n    let _reduced = [];\n    [...bills].sort((a, b) => b.amount - a.amount).forEach(bill => {\n      let tmp = _budget;\n      _budget += Number(bill.amount);\n      if (_budget <= budget.current) {\n        _reduced.push(bill);\n      } else {\n        _budget = tmp;\n      }\n    });\n    console.log(\"budget\", _reduced);\n    setMinBillsToPay([..._reduced]);\n  }\n\n  return (\n    <div className=\"bill-desk\">\n      <div>Bill Desk vBeta</div>\n      <div className=\"bills-container\">\n        {\n          billCategories.categories.length ?\n            <select onChange={(e) => setBillCategories(\n              { ...billCategories, selectedCategory: e.target.value }\n            )}>\n              <option selected={\"All\" === billCategories.selectedCategory} value={\"All\"}>All</option>\n              {\n                billCategories.categories.map(_category => (\n                  <option selected={_category === billCategories.selectedCategory} value={_category}>{_category}</option>\n                ))\n              }\n            </select>\n            : <></>\n        }\n        {\n          displayBills.length ?\n            displayBills.map((bill, id) => (\n              <div key={id} className=\"bill-container\">\n                <div className=\"bill\">\n                  <div className=\"bill-col\">\n                    <div>{bill.description} | </div>\n                    <div>{bill.category} | </div>\n                    <div><b>INR {bill.amount}</b> | </div>\n                    <div>{bill.date}</div>\n                  </div>\n                  <div className=\"bill-col\">\n                    <button onClick={() => enableNewBillForm(true, bill)}>Edit</button>\n                    <button onClick={() => deleteItem(bill.id)}>Delete</button>\n                  </div>\n                </div>\n              </div>\n            )) : <></>\n        }\n      </div>\n      <button onClick={() => enableNewBillForm(!formState.show)}>Add Bill</button>\n      <button onClick={reduceBillsLessThanBuget} style={{ marginLeft: \".5rem\" }}>Reduce Bills</button>\n      {\n        formState.show ?\n          <NewBillForm data={formState.data} onSubmit={onSubmit} resetForm={resetForm} /> : <></>\n      }\n      {\n        minBillsToPay.length ?\n          <div className=\"bills-container\">\n            <h3>Minimum Bills To Pay</h3>\n            <p>* considering minimum budget per month is INR {budget.current}</p>\n            {\n              minBillsToPay.map((bill, id) => (\n                <div key={id} className=\"bill-container\">\n                  <div className=\"bill\">\n                    <div className=\"bill-col\">\n                      <div>{bill.description} | </div>\n                      <div>{bill.category} | </div>\n                      <div><b>INR {bill.amount}</b> | </div>\n                      <div>{bill.date}</div>\n                    </div>\n                  </div>\n                </div>\n              ))\n            }\n          </div> : <></>\n      }\n      <BillDeskTimeSeriesChart bills={displayBills} />\n      <style jsx=\"true\">{`\n        .bill-desk {\n          border: 1px solid #ccc;\n          border-radius: 5px;\n          box-shadow: 2px 2px 6px 2px #eee;\n          max-width: fit-content;\n          margin: 0 auto;\n          padding: 1rem;\n        }\n\n        .bill-desk .title {\n          padding: 1rem;\n        }\n\n        .bill-desk .bills-container {\n          padding-bottom: 1rem;\n        }\n\n        .bill-desk .bills-container select {\n          margin-bottom: 1rem;\n          border: 1px solid #ccc;\n          width: 210px;\n        }\n\n        .bill-desk .bills-container .bill {\n          padding: .5rem;\n          border: 1px solid #ccc;\n          border-radius: 5px;\n          display: flex;\n          justify-content: space-between;\n          flex-wrap: wrap;\n          font-size: 14px;\n        }\n\n        .bill-desk .bills-container .bill:not(:last-child) {\n          margin-bottom: .5rem;\n        }\n\n        .bill-desk .bills-container .bill .bill-col {\n          display: flex;\n        }\n\n        .bill-desk .bills-container .bill .bill-col>div:not(:first-child),\n        .bill-desk .bills-container .bill .bill-col>button {\n          margin-left: .25rem;\n        }\n\n        .bill-desk button {\n          padding: .35rem 1.5rem;\n          border-radius: 5px;\n          font-weight: bold;\n          cursor: pointer;\n        }\n\n        .bill-desk button:focus,\n        .bill-desk button:hover,\n        .bill-desk input {\n          outline: none;\n        }\n\n        .bill-desk .message-container {\n          padding: 0 1rem;\n        }\n\n        .bill-desk .message-container .message {\n          background: linear-gradient(45deg, #67dcfa, transparent);\n          border-radius: 5px;\n        }\n\n        .bill-desk .highcharts-credits {\n          display: none;\n        }\n      `}</style>\n    </div>\n  );\n}","import React from 'react';\nimport { HashRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport logo from './logo.svg';\nimport './App.css';\n\n/* \n* From v0.1.1 onwards default NODE_PATH has been set as src/\n* So no need to write absolute path for imports from v0.1.1 onwards.\n*/\nimport Products from 'components/products/Products';\nimport Blackjack from 'components/blackjack/Blackjack';\nimport ListMaking from 'components/listMaking/ListMaking';\nimport BillDesk from 'components/billDesk/BillDesk';\n\nfunction App() {\n  const routes = [\n    {\n      name: \"Blackjack\",\n      path: \"/blackjack\",\n      show: true\n    },\n    {\n      name: \"Products\",\n      path: \"/products\",\n      show: true\n    },\n    {\n      name: \"List Making\",\n      path: \"/listMaking\",\n      show: true\n    },\n    {\n      name: \"Bill Desk\",\n      path: \"/billdesk\",\n      show: true\n    },\n  ];\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <header>\n          <h1>\n            <img src=\"/mobile-zone/logos/logo.png\" height=\"48px\" width=\"48px\" alt=\"\" />\n            <span>&nbsp;Mobile Zone</span>\n          </h1>\n          <ul>\n            {\n              routes.map((el, id) => el.show && (\n                <li key={id}>\n                  <Link className=\"App-link\" to={el.path}>{el.name}</Link>\n                </li>\n              ))\n            }\n          </ul>\n          <hr />\n        </header>\n        <main>\n          <Switch>\n            <Route exact path=\"/\">\n              <Blackjack />\n            </Route>\n            <Route path=\"/products\">\n              <Products />\n            </Route>\n            <Route path=\"/blackjack\">\n              <Blackjack />\n            </Route>\n            <Route path=\"/listMaking\">\n              <ListMaking />\n            </Route>\n            <Route path=\"/billdesk\">\n              <BillDesk />\n            </Route>\n          </Switch>\n        </main>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}